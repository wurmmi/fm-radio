-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fm_receiver_filtehbi_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 73
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fm_receiver_filtehbi_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000000000010010", 1 => "1111111111011100", 2 => "0000000000000000", 
    3 => "0000000001000101", 4 => "0000000000000010", 5 => "0000000000011110", 
    6 => "1111111110011010", 7 => "0000000000010110", 8 => "1111111111011111", 
    9 => "0000000010000101", 10 => "1111111111110001", 11 => "1111111111101101", 
    12 => "1111111110001011", 13 => "1111111111010000", 14 => "0000000010010000", 
    15 => "0000000000101101", 16 => "0000000010010000", 17 => "1111111011001000", 
    18 => "0000000000011010", 19 => "1111111100111010", 20 => "0000000110110011", 
    21 => "0000000000000000", 22 => "0000000001011101", 23 => "1111111001010111", 
    24 => "1111111100101101", 25 to 26=> "0000000011111010", 27 => "0000001001100110", 
    28 => "1111110010110000", 29 => "1111111111100110", 30 => "1111101110100110", 
    31 => "0000011010010010", 32 => "0000000001101000", 33 => "0000010111110111", 
    34 => "1111001010110011", 35 => "1111001100101111", 36 => "0010010000010010", 
    37 => "1111001100101111", 38 => "1111001010110011", 39 => "0000010111110111", 
    40 => "0000000001101000", 41 => "0000011010010010", 42 => "1111101110100110", 
    43 => "1111111111100110", 44 => "1111110010110000", 45 => "0000001001100110", 
    46 to 47=> "0000000011111010", 48 => "1111111100101101", 49 => "1111111001010111", 
    50 => "0000000001011101", 51 => "0000000000000000", 52 => "0000000110110011", 
    53 => "1111111100111010", 54 => "0000000000011010", 55 => "1111111011001000", 
    56 => "0000000010010000", 57 => "0000000000101101", 58 => "0000000010010000", 
    59 => "1111111111010000", 60 => "1111111110001011", 61 => "1111111111101101", 
    62 => "1111111111110001", 63 => "0000000010000101", 64 => "1111111111011111", 
    65 => "0000000000010110", 66 => "1111111110011010", 67 => "0000000000011110", 
    68 => "0000000000000010", 69 => "0000000001000101", 70 => "0000000000000000", 
    71 => "1111111111011100", 72 => "0000000000010010" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity fm_receiver_filtehbi is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 73;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fm_receiver_filtehbi is
    component fm_receiver_filtehbi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fm_receiver_filtehbi_rom_U :  component fm_receiver_filtehbi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


