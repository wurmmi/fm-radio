-------------------------------------------------------------------------------
--! @file      fm_radio_reg_pkg.vhd
--! @author    Super Easy Register Scripting Engine (SERSE)
--! @copyright 2017 - 2021 Michael Wurm
--! @brief     Register interface constants package for FM Radio
-------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use std.textio.all;

library fm_radiolib;
use fm_radiolib.fm_radio_pkg.all;

--! @brief Package declaration of fm_radio_reg_pkg
--! @details
--! Generated by SERSE. Constants for register interface, for use in testbench.

package fm_radio_reg_pkg is

  -----------------------------------------------------------------------------
  --! @name Types and Constants
  -----------------------------------------------------------------------------
  --! @{

  constant axi_access_time_c : time := 4 * clk_period_c;

  type access_type_t is
    (READ_ONLY, WRITE_ONLY, READ_WRITE, INTERRUPT, INTERRUPT_ERROR);

  type register_t is record
    address     : unsigned(31 downto 0);
    access_type : access_type_t;
    reset       : std_ulogic_vector(31 downto 0);
    mask        : std_ulogic_vector(31 downto 0);
  end record register_t;

  type registers_t is array (0 to num_registers_c-1) of register_t;

  constant register_map_c : registers_t := (
    0 => (x"00000000", READ_ONLY, x"DEADBEEF", x"FFFFFFFF"),
    1 => (x"00000004", READ_WRITE, x"00000000", x"0000000F"));

  -- Register: FM_MAGIC_VALUE
  constant FM_MAGIC_VALUE_ADDR : unsigned(31 downto 0) := x"00000000";
  constant FM_MAGIC_VALUE_MASK : std_ulogic_vector(31 downto 0) := x"FFFFFFFF";

  constant FM_MAGIC_VALUE_VALUE_Pos : natural := 0;
  constant FM_MAGIC_VALUE_VALUE_Len : natural := 32;
  constant FM_MAGIC_VALUE_VALUE_Rst : std_ulogic_vector(31 downto 0) := b"11011110101011011011111011101111";

  -- Register: FM_LED_CONTROL
  constant FM_LED_CONTROL_ADDR : unsigned(31 downto 0) := x"00000004";
  constant FM_LED_CONTROL_MASK : std_ulogic_vector(31 downto 0) := x"0000000F";

  constant FM_LED_CONTROL_VALUE_Pos : natural := 0;
  constant FM_LED_CONTROL_VALUE_Len : natural := 4;
  constant FM_LED_CONTROL_VALUE_Rst : std_ulogic_vector(3 downto 0) := b"0000";


  -----------------------------------------------------------------------------
  -- Functions
  -----------------------------------------------------------------------------

end package fm_radio_reg_pkg;

package body fm_radio_reg_pkg is
end package body fm_radio_reg_pkg;
